# Generated by Django 3.2.6 on 2021-09-02 11:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bodies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_number', models.CharField(max_length=150, unique=True, verbose_name='Номер кузова')),
            ],
            options={
                'verbose_name': 'номер кузова',
                'verbose_name_plural': 'Номера кузовов',
            },
        ),
        migrations.CreateModel(
            name='Defects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('date_defect_detection', models.DateField(verbose_name='Дата обнаружения')),
                ('term_up_to', models.DateTimeField(verbose_name='Срок до')),
                ('number_of_inconsistencies', models.IntegerField(verbose_name='Количество несоответствий')),
                ('discrepancy_description', models.TextField(blank=True, default='Отсутствует', verbose_name='Описание несоответствия')),
                ('body_number', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='defects_body_number', to='defects.bodies', verbose_name='Номер кузова')),
            ],
            options={
                'verbose_name': 'дефект',
                'verbose_name_plural': 'Дефекты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Наименование')),
                ('article', models.CharField(max_length=150, unique=True, verbose_name='Артикул')),
            ],
            options={
                'verbose_name': 'деталь',
                'verbose_name_plural': 'Детали',
            },
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=1, verbose_name='Балл')),
                ('priority_status', models.CharField(max_length=150, verbose_name='Приоритет')),
            ],
            options={
                'verbose_name': 'статус дефекта',
                'verbose_name_plural': 'статусы дефектов',
            },
        ),
        migrations.CreateModel(
            name='ProbabilityEstimate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=1, verbose_name='Балл')),
                ('description', models.CharField(max_length=150, verbose_name='Оценка')),
            ],
            options={
                'verbose_name': 'оценка',
                'verbose_name_plural': 'оценки',
            },
        ),
        migrations.CreateModel(
            name='ScaleOfConsequences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=1, verbose_name='Балл')),
                ('description', models.CharField(max_length=150, verbose_name='Оценка')),
            ],
            options={
                'verbose_name': 'оценка',
                'verbose_name_plural': 'оценки',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=1, verbose_name='Балл')),
                ('defect_status', models.CharField(max_length=150, verbose_name='Статус дефекта')),
            ],
            options={
                'verbose_name': 'статус дефекта',
                'verbose_name_plural': 'статусы дефектов',
            },
        ),
        migrations.CreateModel(
            name='TypeOfMismatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mismatch', models.CharField(max_length=150, verbose_name='Тип несоответствия')),
            ],
            options={
                'verbose_name': 'тип несоответствия',
                'verbose_name_plural': 'Типы несоответствий',
            },
        ),
        migrations.CreateModel(
            name='Workshops',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_workshop', models.CharField(max_length=150, verbose_name='Цех')),
                ('responsible_executor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='workshops_responsible_executor', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный исполнитель')),
            ],
            options={
                'verbose_name': 'цех',
                'verbose_name_plural': 'Цеха',
            },
        ),
        migrations.CreateModel(
            name='PhotoDefects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/', verbose_name='Фото дефекта')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('defect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='defects.defects', verbose_name='Дефект')),
            ],
            options={
                'verbose_name': 'фото',
                'verbose_name_plural': 'Фото дефектов',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='defects',
            name='detail',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='defects_detail', to='defects.details', verbose_name='Деталь'),
        ),
        migrations.AddField(
            model_name='defects',
            name='priority',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='defects_priority', to='defects.scaleofconsequences', verbose_name='Приоритет'),
        ),
        migrations.AddField(
            model_name='defects',
            name='probability_estimate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='defects_probability', to='defects.status', verbose_name='Качественная оценка вероятности'),
        ),
        migrations.AddField(
            model_name='defects',
            name='quality_controller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='defects_quality_controller', to=settings.AUTH_USER_MODEL, verbose_name='Контролер ОТК'),
        ),
        migrations.AddField(
            model_name='defects',
            name='responsible_executor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='defects_responsible_executor', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный исполнитель'),
        ),
        migrations.AddField(
            model_name='defects',
            name='scale_of_consequences',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='defects_scale', to='defects.scaleofconsequences', verbose_name='Масштаб последствий'),
        ),
        migrations.AddField(
            model_name='defects',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='defects_status', to='defects.status', verbose_name='Статус дефекта'),
        ),
        migrations.AddField(
            model_name='defects',
            name='type_of_discrepancy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='defects_type_of_discrepancy', to='defects.typeofmismatch', verbose_name='Тип несоответствия'),
        ),
        migrations.AddField(
            model_name='defects',
            name='workshop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='defects_workshop', to='defects.workshops', verbose_name='Цех'),
        ),
    ]
